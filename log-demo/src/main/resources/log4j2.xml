<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="warn" monitorInterval="30">
  <!--配置文件中变量值,下面会用到-->
  <Properties>
    <property name="appName" value="log-demo"/>
    <!--占位符定义：日志格式-->
    <property name="PATTERN" value="%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} | %-5level | ${appName} | ${HOSTNAME} | %X{x-trace-id:-N/A} | %thread | %logger{40} | %msg%xEx%n" />

    <property name="logDir" value="/Users/gy/logs/applogs/${appName}/${HOSTNAME}" />

    <!-- SizeAndTimeBasedRollingPolicy -->
    <property name="maxFileSize" value="200MB" />
    <property name="maxHistory" value="30" />
    <property name="totalSizeCap" value="20GB" />

    <!--占位符定义：业务日志路径 -->
    <property name="bizLogDir" value="${logDir}/biz" />
  </Properties>
  <!--先定义所有的appender-->
  <Appenders>
    <!--这个输出控制台的配置-->
    <Console name="Console" target="SYSTEM_OUT">
      <!--输出日志的格式-->
      <PatternLayout pattern="${PATTERN}" charset="UTF-8" />
    </Console>
    <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，
    则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
    <RollingFile name="RollingFileInfo" fileName="${bizLogDir}/${appName}.biz.log"
      filePattern="${bizLogDir}/${appName}.%d{yyyy-MM-dd}.%i.biz.log">
      <Filters>
        <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
        <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
        <!--<ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>-->
      </Filters>
      <PatternLayout pattern="${PATTERN}" charset="UTF-8" />
      <Policies>
        <TimeBasedTriggeringPolicy/>
        <SizeBasedTriggeringPolicy size="${maxFileSize}"/>
      </Policies>
      <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <DefaultRolloverStrategy max="${maxHistory}" />
    </RollingFile>

<!--    <RollingFile name="RollingFileWarn" fileName="${bizLogDir}/${appName}.biz.warn.log"-->
<!--      filePattern="${bizLogDir}/${appName}.%d{yyyy-MM-dd}.%i.biz.warn.log">-->
<!--      <Filters>-->
<!--        <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--        <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>-->
<!--      </Filters>-->
<!--      <PatternLayout pattern="${PATTERN}"/>-->
<!--      <Policies>-->
<!--        <TimeBasedTriggeringPolicy/>-->
<!--        <SizeBasedTriggeringPolicy size="${maxFileSize}"/>-->
<!--      </Policies>-->
<!--      <DefaultRolloverStrategy max="${maxHistory}"/>-->
<!--    </RollingFile>-->

<!--    <RollingFile name="RollingFileError" fileName="${bizLogDir}/${appName}.biz.error.log"-->
<!--      filePattern="${bizLogDir}/${appName}.%d{yyyy-MM-dd}.%i.biz.error.log">-->
<!--      <ThresholdFilter level="ERROR"/>-->
<!--      <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] [%t] - %l - %m%n"/>-->
<!--      <Policies>-->
<!--        <TimeBasedTriggeringPolicy/>-->
<!--        <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--      </Policies>-->
<!--    </RollingFile>-->

  </Appenders>
  <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
  <Loggers>
    <!--注意：%M %L 所在的appender如果是AsyncLogger异步Logger的输出源的话,只有当AsyncLogger设置了includeLocation="true"才会显示，
    但是，这样会降低日志输出的性能(it can make logging 5 - 20 times slower),所以,如果注重性能这里就不要打印日志的行数和所在方法-->
    <AsyncLogger name="org.gy.demo.log" level="INFO" additivity="false">
      <appender-ref ref="Console" />
      <appender-ref ref="RollingFileInfo" />
    </AsyncLogger>
    <Root level="INFO">
      <appender-ref ref="RollingFileInfo" />
    </Root>
  </Loggers>
</configuration>